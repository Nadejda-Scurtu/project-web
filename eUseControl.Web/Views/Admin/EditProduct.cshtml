@model eUseControl.Domain.Entities.Product

@{
    ViewBag.Title = "AddProduct";
    Layout = "~/Views/Shared/Layouts/_Admin.cshtml";
}

<div class="col-md-10">
    <div class="card card-user">
        <div class="card-header">
            @if (Model != null)
            {
                <h4 class="card-title" style="color: #5466de">
                    Edit @Model.ProductName
                </h4>
            }
            else
            {
                <h4 class="card-title" style="color: #5466de">
                    Add New Product
                </h4>
            }
        </div>

        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationMessage("")
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.Image0)
                @Html.HiddenFor(x => x.Image1)
                @Html.HiddenFor(x => x.Image2)

                <div class="row">
                    <div class="col-md-6 pr-1">
                        <div class="form-group">
                            @Html.LabelFor(x => x.ProductName)
                            @Html.TextBoxFor(x => x.ProductName, new
                            {
                                @class = "form-control",
                                placeholder = "Type here"
                            })
                            @Html.ValidationMessageFor(x => x.ProductName)
                        </div>
                    </div>
                    <div class="col-md-6 pl-1">
                        <div class="form-group">
                            @Html.LabelFor(x => x.BrandName)
                            @Html.TextBoxFor(x => x.BrandName, new
                            {
                                @class = "form-control",
                                placeholder = "Type here"
                            })
                            @Html.ValidationMessageFor(x => x.BrandName)
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Description)
                            @Html.TextAreaFor(x => x.Description, new
                            {
                                @class = "form-control",
                                placeholder = "Type here"
                            })
                            @Html.ValidationMessageFor(x => x.Description)
                        </div>
                    </div>

                    <div class="col-md-12">
                        @if (Model != null)
                        {
                            <label>Images</label>
                            <br />

                            for (var i = 0; i < 3; i++)
                            {
                                <img src="@Model.GetImageById(i)" width="100" height="100" style="margin-right: 10px" />
                                @Html.TextBox("Image" + i, "", new
                                {
                                    type = "file",
                                    form = "form_file" + i,
                                    onchange = "this.form.submit()"
                                })
                                <br />
                                <br />
                            }

                            <br />
                        }
                        else
                        {
                            <span>You can add images after you've created a product.</span>
                        }
                    </div>

                    <div class="col-md-4 pr-2">
                        <div class="form-group">
                            @Html.LabelFor(x => x.RegularPrice)
                            @Html.TextBoxFor(x => x.RegularPrice, new
                            {
                                @class = "form-control",
                                placeholder = "0.00",
                                type = "number",
                                step = "0.01",
                                min = "0"
                            })
                            @Html.ValidationMessageFor(x => x.RegularPrice)
                        </div>
                    </div>
                    <div class="col-md-4 px-2">
                        <div class="form-group">
                            @Html.LabelFor(x => x.PromotionalPrice)
                            @Html.TextBoxFor(x => x.PromotionalPrice, new
                           {
                               @class = "form-control",
                               placeholder = "0.00",
                               type = "number",
                               step = "0.01",
                               min = "0"
                           })
                            @Html.ValidationMessageFor(x => x.PromotionalPrice)
                        </div>
                    </div>
                    <div class="col-md-4 pl-2">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Currency)
                            @Html.DropDownListFor(x => x.Currency,
                                new SelectList(Enum.GetValues(typeof(eUseControl.Domain.Enums.CurrencyType))),
                                new { @class = "form-control" }
                            )
                            @Html.ValidationMessageFor(x => x.Currency)
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4 pr-2">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Category)
                            @Html.TextBoxFor(x => x.Category, new
                            {
                                @class = "form-control",
                                placeholder = "Type here",
                            })
                            @Html.ValidationMessageFor(x => x.Category)
                        </div>
                    </div>
                    <div class="col-md-4 px-2">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Tags)
                            @Html.TextBoxFor(x => x.Tags, new
                            {
                                @class = "form-control",
                                placeholder = "Enter tags",
                            })
                            @Html.ValidationMessageFor(x => x.Tags)
                        </div>
                    </div>
                    <div class="col-md-4 pl-2">
                        <div class="form-group">
                            @Html.LabelFor(x => x.Size)
                            @Html.DropDownListFor(x => x.Size,
                                new SelectList(Enum.GetValues(typeof(eUseControl.Domain.Enums.ProductSize))),
                                new { @class = "form-control" }
                            )
                            @Html.ValidationMessageFor(x => x.Size)
                        </div>

                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-center">
                        <button type="submit" class="btn btn-primary btn-round mr-4">Save and publish</button>
                        <button type="submit" class="btn btn-secondary btn-round">Save to draft</button>
                    </div>
                </div>
            }

            @if (Model != null)
            {
                for (var i = 0; i < 3; i++)
                {
                    using (Html.BeginForm(
                        "EditProductUploadImage",
                        "Admin",
                        FormMethod.Post,
                        new
                        {
                            enctype = "multipart/form-data",
                            id = "form_file" + i
                        }
                    ))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("ProductId", Model.Id)
                    }
                }

            }
        </div>
    </div>
</div>
